import { WorldNodeIconKey } from '@repo/game/types'

export type NodeIconProps = {
  size: number
}

// import { IoArrowForwardCircleOutline } from "react-icons/io5";
const startSvg = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 16 16" height="${props.size}px" width="${props.size}px" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z"></path></svg>`
// import { IoSkullSharp } from "react-icons/io5";
const skullSvg = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="${props.size}px" width="${props.size}px" xmlns="http://www.w3.org/2000/svg"><path d="M256 16C141.31 16 48 109.31 48 224v154.83l82 32.81L146.88 496H192v-64h32v64h16v-64h32v64h16v-64h32v64h45.12L382 411.64l82-32.81V224c0-114.69-93.31-208-208-208zm-88 320a56 56 0 1 1 56-56 56.06 56.06 0 0 1-56 56zm51.51 64L244 320h24l24.49 80zM344 336a56 56 0 1 1 56-56 56.06 56.06 0 0 1-56 56zm104 32z"></path></svg>`
// import { GiCash } from "react-icons/gi";
const cashSvg = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" viewBox="0 0 512 512" height="${props.size}px" width="${props.size}px" xmlns="http://www.w3.org/2000/svg"><g class="" style="" transform="translate(-10,-9)"><path d="M210.6 44.39l-7-4.39c-13.7-8.4-30.8-13.28-45.5-8.7-15.8 4.92-28.4 17.09-35 35.37l-9.4-4.84c-16.2-8.34-24.68-8.47-31.71-5.31-5.61 2.51-11.46 8.55-18.09 17.37l82.4 63.71c12.9 4.2 31.8 4.1 50.7-.8 19-4.9 37.9-14.5 51.7-27.4l31.1-76.9c-27.4-21.65-52.4-9.11-69.2 11.89zm53.1 76.51c-17 17.2-42.3 28.8-62 34-6.9 1.8-13.8 3.1-20.5 3.8-3.7 6.1-6.8 12.3-9.2 18.5 4.8 24.4 13.8 44.4 27.3 60.8l-14.4 12c-8.3-10-15.7-20.8-21.3-32.8-.9 23.2 4.3 47.2 12.8 72.2l-17.7 6c-15.6-45.6-20.9-92.3 1-136.3-7.4-.6-14.4-2-20.9-4.3l-.3-.1c-4.3 4.1-8.4 8.4-12.3 12.9-31.57 36.6-48.96 85.3-39.86 123.2 4.87 20.3 13.6 39.5 26.16 55.9 18.4-.4 35.8 0 51.6 6 7.5-.8 15.2-1.3 23.2-1.3 28.5 0 54.3 5.3 73.8 14.5 7.6 3.6 14.5 7.9 20 12.8 0-5.3.8-11 2.4-15.2-8.9-8.4-14.5-18.6-14.5-30.2 0-16.1 10.7-29.4 26.2-39 0-4.6.9-9 2.5-13.2-10.1-8.7-16.6-19.5-16.6-32.1 0-7.9 2.6-15.1 7-21.6-4.4-6.4-7-13.6-7-21.5 0-3.9.6-7.5 1.7-11-9.7-8.6-15.8-19.2-15.8-31.4 0-12.1 6-22.6 15.6-31.1-5.9-4.6-12.2-8.5-18.9-11.5zm111.4 2.3c-26 0-49.5 5.5-65.6 13.6-16.2 8.1-23.8 18.1-23.8 26.7 0 8.7 7.6 18.7 23.8 26.8 16.1 8.1 39.6 13.6 65.6 13.6 11.3 0 22-1.1 31.9-2.9v-17c13.9-2.1 25.4-5.9 32.8-10.8v17.6c12.5-3.6 24.5-16.9 24.8-27.3 0-8.6-7.6-18.6-23.8-26.7-16.2-8.1-39.6-13.6-65.7-13.6zm96.5 67.7c-3.3 3.5-7.2 6.8-11.6 9.8l.2 29c12.6-7.5 18.5-16.2 18.5-23.8 0-4.8-2.3-10-7.1-15zm-171.8 15.4c.3 8.6 7.9 18.3 23.8 26.3 16.2 8.2 39.6 13.6 65.7 13.6 16.3 0 31.6-2.2 44.7-5.8l.7-27.2c-17.2 6-37.6 9.3-59.6 9.3-28.5 0-54.4-5.7-74-15.5-.5-.2-.9-.5-1.3-.7zm2 34.8c-1.4 2.7-2 5.4-2 7.9 0 8.7 7.6 18.7 23.8 26.8 16.2 8.1 39.6 13.5 65.7 13.5 13.2 0 25.7-1.3 37-3.8v-24c-11.6 2.2-24 3.3-37 3.3-28.6 0-54.5-5.6-74.1-15.5-4.9-2.4-9.4-5.2-13.4-8.2zm174.9 0c-6.1 4.3-11.4 7.5-17.6 10.2v22.3c13.3-7.7 19.6-16.7 19.6-24.6 0-2.5-.6-5.2-2-7.9zm7.5 36.8c-2 2-4.2 3.9-6.6 5.8v32.4c10.3-7 15.3-14.7 15.3-21.7 0-5.3-2.9-11-8.7-16.5zm-170.1 14c-.1.9-.2 1.7-.2 2.5 0 8.7 7.6 18.6 23.8 26.7 16.2 8.2 39.7 13.6 65.7 13.6 14.9 0 29.1-1.8 41.4-4.8V300c-16.3 5.2-35.2 8-55.5 8-28.6 0-54.5-5.7-74.1-15.5-.4-.2-.7-.4-1.1-.6zm-13.6 21.4c-8.7 6.5-12.8 13.6-12.8 20 0 8.7 7.6 18.6 23.8 26.8 16.2 8.1 39.6 13.5 65.7 13.5 9.5 0 18.7-.7 27.3-2v-18.2h-1.1c-28.6 0-54.5-5.7-74.1-15.6-12.5-6.2-22.9-14.5-28.8-24.5zM463 343.9c-7.9 2.8-16.5 5.1-25.7 6.6v12.1c1.9-.8 3.8-1.6 5.6-2.5 9.8-5 16.4-10.6 20.1-16.2zm9.2 18.2c-3.8 3.8-8.2 7.2-13.1 10.3V401c13.3-7.6 19.6-16.6 19.6-24.5 0-4.6-2.1-9.6-6.5-14.4zm-348.7 2.8c-10.2.1-21.2 1.4-32.6 4.1-22.81 5.3-42.42 15-55.22 25.7-12.8 10.6-17.8 21.4-16.3 29.1 1.5 7.7 9.4 14.8 24.8 18.9 15.35 4 36.82 4.2 59.62-1.1 9.2-2.2 17.8-5 25.7-8.3v-20.7c14.6-6.5 25.5-14.3 30.4-21.9v24.4c12.1-10.4 16.8-20.8 15.4-28.4-1.4-7.7-9.4-14.8-24.8-18.8-7.7-2-16.9-3.1-27-3zm64.6 5.2c2.7 3.9 4.6 8.3 5.6 13.2 1.1 6 .6 11.8-1.2 17.5 9.9 2.6 18.9 6.1 26.7 10.5 4.4 2.4 8.5 5.3 12.1 8.3 9-2.1 16.6-5.1 22-8.7v20.6c16.1-7.6 23.5-16.9 23.5-24.3 0-7.5-7.4-16.8-23.6-24.4-16.1-7.5-39.3-12.6-65.1-12.7zm111.8 5c-.1.4-.1.9-.1 1.4 0 8.7 7.6 18.6 23.8 26.8 16.2 8.1 39.6 13.5 65.7 13.5 13.2 0 25.7-1.4 37-3.8v-26.9c-14.8 4-31.5 6.2-49.1 6.2-28.6 0-54.5-5.7-74.1-15.5-1.1-.6-2.2-1.2-3.2-1.7zm2.8 37.3c-2 3.3-2.9 6.5-2.9 9.6 0 8.7 7.6 18.6 23.8 26.8 16.2 8.1 39.6 13.5 65.7 13.5 13.2 0 25.7-1.4 37-3.8v-26.4c-11.6 2.2-24 3.4-37 3.4-28.6 0-54.5-5.7-74.1-15.6-4.5-2.2-8.7-4.7-12.5-7.5zm173.1 0c-5.8 3.9-10.9 7-16.7 9.5v24.6c13.3-7.6 19.6-16.6 19.6-24.5 0-3.1-.9-6.3-2.9-9.6zm-292.6 5.4c-3.5 4.4-7.6 8.6-12.2 12.4-15.6 13.1-37.6 23.7-63 29.6-9.06 2.1-18.06 3.4-26.7 4.1 3.2 5.3 8.83 10.5 17.07 15.1 13.63 7.7 33.63 12.9 55.83 12.9 10.1 0 19.7-1.1 28.5-3v-20.8c13.8-2.1 25.4-5.9 32.8-10.8v18.4c10-7 14.8-14.9 14.8-22.4 0-8.7-6.5-18-20.2-25.7-7.4-4.1-16.6-7.5-26.9-9.8z" fill="currentColor"></path></g></svg>`
// import { HiLockClosed } from "react-icons/hi2";
const locked = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="${props.size}px" width="${props.size}px" xmlns="http://www.w3.org/2000/svg"><path d="M368 192h-16v-80a96 96 0 1 0-192 0v80h-16a64.07 64.07 0 0 0-64 64v176a64.07 64.07 0 0 0 64 64h224a64.07 64.07 0 0 0 64-64V256a64.07 64.07 0 0 0-64-64zm-48 0H192v-80a64 64 0 1 1 128 0z"></path></svg>`
// import { HiLockOpen } from "react-icons/hi2";
const unlocked = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="${props.size}px" width="${props.size}px" xmlns="http://www.w3.org/2000/svg"><path d="M368 192H192v-80a64 64 0 1 1 128 0 16 16 0 0 0 32 0 96 96 0 1 0-192 0v80h-16a64.07 64.07 0 0 0-64 64v176a64.07 64.07 0 0 0 64 64h224a64.07 64.07 0 0 0 64-64V256a64.07 64.07 0 0 0-64-64z"></path></svg>`
// import { BsQuestionLg } from "react-icons/bs";
const question = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 16 16" height="${props.size}" width="${props.size}" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.475 5.458c-.284 0-.514-.237-.47-.517C4.28 3.24 5.576 2 7.825 2c2.25 0 3.767 1.36 3.767 3.215 0 1.344-.665 2.288-1.79 2.973-1.1.659-1.414 1.118-1.414 2.01v.03a.5.5 0 0 1-.5.5h-.77a.5.5 0 0 1-.5-.495l-.003-.2c-.043-1.221.477-2.001 1.645-2.712 1.03-.632 1.397-1.135 1.397-2.028 0-.979-.758-1.698-1.926-1.698-1.009 0-1.71.529-1.938 1.402-.066.254-.278.461-.54.461h-.777ZM7.496 14c.622 0 1.095-.474 1.095-1.09 0-.618-.473-1.092-1.095-1.092-.606 0-1.087.474-1.087 1.091S6.89 14 7.496 14"></path></svg>`
const waterfall = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="${props.size}" width="${props.size}" xmlns="http://www.w3.org/2000/svg"><path d="M432.3 28.66c-13.4 0-26.6 6.43-40.5 19.98-4 3.94-7.8 8.06-11.6 12.12 3.7 5.59 6.1 12.64 7.7 18.46 5.6-6.15 11.1-12.41 16.5-17.76 10.1-9.98 19.1-15.59 26.9-14.66 16.1 1.9 23.7 6.55 29.6 12.81 5.9 6.26 10.1 15.12 16.4 25.18l15.2-9.58c-5.5-8.82-10-18.95-18.5-28.01-14.6-12.13-28.3-18.55-41.7-18.54zM113.7 45.63c-53.35.23-77.7 17.56-95.66 35.88l12.86 12.6c17.42-17.77 35.03-31.75 90-30.32l34.5 32.52h15c-.2-8.94-7.8-17.4-12.6-22.5-14.9-16.14-24.1-28.22-44.1-28.18zm146.7 9.79c-10.1 0-20.2.21-29.6.57 3.8 8.38 5.6 17.38 6.6 24.88 1 11.64-15.6 12.34-17.8 2.42-1.2-8.61-4.6-19.79-8.9-26.23-15.2 1-28.9 2.35-40.3 3.73 7.3 8.95 18 21.8 18 31.02.5 89.69-2.8 180.09-9.7 270.89 1.6-1.7 3.2-3.4 4.9-4.9 8.4-7.6 18.4-13.7 30-13h.1c2.6.2 5.1.7 7.5 1.4.2-16.6.6-30.9.1-44.4 5.3 5.6 10.7 10 18-.6.7 17.6-.1 35.5-.3 56.9 1.1 1.1 2 2.2 3 3.3 7.4 8.6 13.4 19.2 18.4 29.6 1.8 3.8 3.4 7.5 4.9 11.1 1.3-56.5.5-112.9-2.2-169.4 8.6 11.3 13.3 7 18-.8 2.7 56.6 3.5 113.3 2.2 169.9 11.4-11.3 25.1-22.9 41.6-22.6 4.1.1 7.8 1 11.2 2.5l.1-23.9c7.9 8.9 13.4 6.9 18 0L354 396c3.5 3.6 6.9 7.9 9.8 11.7 3.9-2 8.9-4.4 14.9-7l-5.7-73.9c6 5.5 12 10 18-1.4l5.3 68.5c6.6-2.3 13.5-4.2 20.4-5-11.2-93.4-25.2-192-44.3-296.39h.1c-1.4-7.39-3.3-14.6-5.9-19.56-2.5-4.95-5-7.23-8.7-8.07-18.2-4.12-37.7-6.65-57.3-8.04 8.6 17.14 8.4 34.97 8.6 49.66 1.1 10.8-17.2 17-18 .2-.3-18.71.2-35.46-12.7-50.98-6-.2-12-.29-18.1-.3zm90.8 31.52C362.6 130.7 371.8 206.4 378.3 251c-.9 17.6-14.2 13.4-17.8 2.6-6.5-45-16.1-121.1-26.7-162.09 9.9 7.7 16 6.9 17.4-4.57zM224 107c3.5 55 2.4 109.1-.7 162.5.2 11-15.3 14.1-18-1 3.1-53 4.2-106.3.7-160.3 8.9 13.3 14.2 9.3 18-1.2zm51.5 22.5c3.2 27.5 4.3 42.9 3.9 59.9-6.4 9.5-12.3 7.9-18-.4.4-16-.7-30.2-3.7-57.5 7 8.6 12.8 6.6 17.8-2zm52.3 27.2c3.4 50.7 4.3 90 5.6 154.8-5 5.4-9.8 11.7-18 .4-1.3-64.8-2.2-103.7-5.6-154 7.5 9.3 13.1 6 18-1.2zm-246 180.8c-10.73-.3-16.16 18.9-13.38 29.3 3.68 13.8 34.78 24.8 34.78 24.8s-2-53.6-21.4-54.1zm47.4-.4c-.8.6-1.3 1.4-1.7 2.3-4.2 9.9 22.6 23.1 22.6 23.1s5.9-17.4.6-22.8c-4.7-4.8-16.6-7-21.5-2.6zm319.5-3.8c-.5 0-.9 0-1.3.1-11.7 2.2-13.9 23.8-8.3 34.9 0 0 18.8-9.1 19.8-18 .8-6.3-4-16.8-10.2-17zm29.8 20.5c-20.3 1.1-16.8 58.6-16.8 58.6s27.7-10.5 31.2-22.9c3.5-12.3-1.6-36.4-14.4-35.7zm-282.8 17.3c-6.5 5.9-13 14.6-18.7 23.5-11.2 17.8-18.8 36-18.8 36l-3.6 8.7c-22-11.1-36.9-16.8-57.82-17.6-13.41-.5-24.76 11.5-27.43 22.4-1.41 6.4 0 14.3 9.09 25.6 120.56 14.8 310.86 21.1 411.06.4 3.5-16.4-2.3-27.7-13-37.9-11.7-11.3-29.8-19.6-45-24.5-7.3-2.4-24.9 1.2-39.4 6.9-14.6 5.8-26.4 12.5-26.4 12.5l-7.4 4.2-4.6-7s-4.8-7.3-11.3-14.4c-6.6-7.1-15.5-12.7-17.7-12.7-6.6-.1-20.7 9.2-31.5 20.3-10.7 11-18.6 22.2-18.6 22.2l-11 15.5-5.1-18.3s-5.3-19.1-14.4-38.1c-4.5-9.6-10-19-15.7-25.7-12.7-13.4-20.3-13-32.7-2zM35.58 384c-4.27-.1-7.98 1.2-9.85 4.5-8.27 14.4 30.78 39.3 30.78 39.3s6.88-26.5-.99-35.3c-4.19-4.6-12.83-8.4-19.94-8.5z"></path></svg>`
// import { GiStarAltar } from "react-icons/gi";
const altar = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="${props.size}" width="${props.size}" xmlns="http://www.w3.org/2000/svg"><path d="M256 25.61l-97.8 36.67L256 86.72l97.8-24.44L256 25.61zM136.1 75.3L105.9 407h300.2L375.9 75.3l-119.9 30-119.9-30zM256 128l30 72.7 78.3 6-59.8 51L323 334l-67-41.2-66.9 41.3 18.4-76.5-59.8-50.9 78.4-6L256 128zM70.09 425l-24.8 62H237.3l-49.6-62H70.09zm140.61 0l45.3 56.6 45.3-56.6h-90.6zm113.6 0l-49.6 62h192l-24.8-62H324.3z"></path></svg>`
// import { LuSwords } from "react-icons/lu";
const swords = (props: NodeIconProps) =>
  `<svg stroke="currentColor" fill="none" stroke-width="1" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="${props.size}" width="${props.size}" xmlns="http://www.w3.org/2000/svg"><polyline points="14.5 17.5 3 6 3 3 6 3 17.5 14.5"></polyline><line x1="13" x2="19" y1="19" y2="13"></line><line x1="16" x2="20" y1="16" y2="20"></line><line x1="19" x2="21" y1="21" y2="19"></line><polyline points="14.5 6.5 18 3 21 3 21 6 17.5 9.5"></polyline><line x1="5" x2="9" y1="14" y2="18"></line><line x1="7" x2="4" y1="17" y2="20"></line><line x1="3" x2="5" y1="19" y2="21"></line></svg>`

export function getNodeIconRaw(
  key: WorldNodeIconKey,
  props: NodeIconProps
): string {
  switch (key) {
    case '?':
      return question(props)
    case 'combat':
      return swords(props)
    case 'locked':
      return locked(props)
    case 'shop':
      return cashSvg(props)
    case 'spring':
      return waterfall(props)
    case 'start':
      return startSvg(props)
    case 'unlocked':
      return unlocked(props)
    case 'altar':
      return altar(props)

    default:
      return ''
  }
}
